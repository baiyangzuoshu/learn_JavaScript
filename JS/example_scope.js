function    a(){
    function b(){
        var b=2;
    }
    var a=1;
    b();
}

var c=2;
a();
/**
 * 函数定义时，生成GO
 * 函数调用前，生成AO
 * JS引擎为每一个函数带有一个Scope属性，Scope拥有一个作用域，而此作用域又包含了作用域链，这个作用域链就是AO+GO
 * AO是在GO上面的，因此可以理解为什么函数每次都是访问函数内部的变量，然后在往上追溯。
 */